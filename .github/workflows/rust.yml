name: Build and Deploy

on:
  push:
    branches: ["master"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-comet-cli:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: cargo build --bin comet --verbose
      - name: Run tests
        run: cargo test --bin comet --verbose
      - name: Run sample simulation
        run: cargo run --bin comet -- --advantage 1 --games 100 -v

  build-comet-web:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Crate
        uses: actions/checkout@v3
      - name: Checkout Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true
      - name: Get Rust version
        id: rustc_version
        run: |
          rust_version=$(rustc --version | md5sum | cut -f 1-1 -d ' ')
          echo "##[set-output name=version;]$(echo $rust_version)"
      - name: Restore Cargo cache
        uses: actions/cache@v3.0.7
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          # Generate a new cache whenever crates or rust version changes.
          key: ${{ runner.os }}-cargo-${{ steps.rustc_version.outputs.version }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Install trunk
        continue-on-error: true
        run: cargo install trunk
      - name: Build
        run: trunk build --release
      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v1.0.3
        with:
          path: ./dist

  deploy:
    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    needs: build-comet-web

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
